pipeline {

libraries{
lib 'shlib'
lib 'shlib@sonar.groovy'
lib 'shlib@build.groovy'
lib 'shlib@nexus.groovy'
}

    agent any
    tools{
        maven "Maven"
    }
    stages {
      /*stage('Start')
            {
                steps
                 { 
                    sendNotifications 'STARTED'
                 }
            }*/

      stage('clean and build')
            {
                steps{
                    
                 
                  //sendNotifications 'STARTEDBUILD'
                    sh 'mvn clean package'
                 
            }
            }
            stage('Approval'){
                steps{
                    /*timeout(time:3, unit: 'DAYS'){
                       input 'Proceed with next job?'*/
                      script{
                         emailext mimeType: 'text/html',
                 subject: "[Jenkins]${currentBuild.fullDisplayName}",
                 to: "abhishek.gupta2015a@gmail.com",
                 body: '''<a href="http://18.224.251.223:8080/">click to approve</a>'''

        def userInput = input id: 'userInput',
                              message: 'Let\'s promote?', 
                              submitterParameter: 'submitter',
                              submitter: 'Abhishek',
                              parameters: [
                                [$class: 'TextParameterDefinition', defaultValue: 'sit', description: 'Environment', name: 'env'],
                                [$class: 'TextParameterDefinition', defaultValue: 'k8s', description: 'Target', name: 'target']]

        echo ("Env: "+userInput['env'])
        echo ("Target: "+userInput['target'])
        echo ("submitted by: "+userInput['submitter'])
                      }
                    
                    
                }
            }
            stage("nexus") {
            steps {
          withCredentials([usernamePassword(credentialsId: 'nexus_creds', passwordVariable: 'password', usernameVariable:'username')]) {
              sh 'curl -u ${username}:${password} --upload-file target/myWebApp_Test.war http://ec2-18-224-155-110.us-east-2.compute.amazonaws.com:8081/nexus/content/repositories/devopstraining/phoenixTeam/WebApplication-${BUILD_NUMBER}.war'
              //sh 'curl -u ${username}:${password} --upload-file target/WebApplication-1.war http://ec2-18-224-155-110.us-east-2.compute.amazonaws.com:8081/nexus/content/repositories/devopstraining/phoenixTeam/WebApplication-1.war'
        //sh 'curl -v -F r=devopstraining -F hasPom=true -F e=war -F file=@pom.xml -F file=@target/WebApplication-0.0.1-SNAPSHOT.war -u ${username}:${password} http://ec2-18-224-155-110.us-east-2.compute.amazonaws.com:8081/nexus/content/repositories/devopstraining/phoenixTeam/WebApplication-0.0.1-SNAPSHOT.war'
         }
        }
        }
       stage('SonarQube analysis') {
            steps {
              withSonarQubeEnv('sonarqube') {
                sh 'mvn sonar:sonar'
              }
            } 
            }
        stage('Quality Gate') {
            steps {
              timeout(time: 5, unit: 'MINUTES') { // Just in case something goes wrong, pipeline will be killed after a timeout
                waitForQualityGate abortPipeline: true //waiting for a task to be completed
              }
            }
       }
  
        }
        post{
always{
sendNotifications currentBuild.result
}
}

    }
